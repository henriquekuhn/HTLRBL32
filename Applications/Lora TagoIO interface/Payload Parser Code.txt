/*
Parse example for HTLRBL32 Web Platform Application"
*/

const payload_raw = payload.find(x => x.variable === 'payload_raw' || x.variable === 'payload' || x.variable === 'data');
if (payload_raw) {
  try {
    // Convert the data from Hex to Javascript Buffer.
    const buffer = Buffer.from(payload_raw.value, 'hex');

    // Lets say you have a payload of 5 bytes.
    // 0,1 - Temperature
    // 2,3 - Humidity
    // 4   - Pressure
    const data = [
      { variable: 'temperature', value: buffer.readInt16LE(0)/100, unit: 'Â°C' },
      { variable: 'humidity',  value: buffer.readUInt16LE(2)/100, unit: '%' },
      { variable: 'pressure',  value: buffer.readUInt8(4)/100, unit: 'atm' },
    ];

    // This will concat the content sent by your device with the content generated in this payload parser.
    // It also add the field "serie" and "time" to it, copying from your sensor data.

   payload = payload.concat(data.map(x => ({ ...x, serie: payload_raw.serie, time: payload_raw.time })));
  } catch (e) {
    // Print the error to the Live Inspector.
    console.error(e);

    // Return the variable parse_error for debugging.
    payload = [{ variable: 'parse_error', value: e.message }];
  }
}